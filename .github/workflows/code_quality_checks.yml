---
name: Code Quality Checks

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # Do not let Poetry to install again if we do not detect a lock file change
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |          
          poetry install --no-interaction --all-extras

      - name: Check format with black
        run: poetry run black --check craterpy/
      - name: Unit & Coverage test with pytest
        run: poetry run pytest --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        