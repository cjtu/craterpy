[project]
name = "craterpy"
version = "0.10.0"
description = "Impact crater data science in Python."
readme = "README.md"
authors = [
    {name = "Christian J. Tai Udovicic", email = "cj.taiudovicic@gmail.com"},
]
license = {text = "MIT"}
requires-python = "<4.0,>=3.10"
dependencies = [
    "numpy<3.0.0,>=2.2.4",
    "matplotlib<4.0.0,>=3.10.1",
    "pandas<3.0.0,>=2.2.3",
    "rasterio<2.0.0,>=1.3.10",
    "cartopy<1.0.0,>=0.24.0",
    "rasterstats<1.0.0,>=0.20.0",
    "geopandas<2.0.0,>=1.0.1",
    "scipy<2.0.0,>=1.13.1",
    "antimeridian<1.0.0,>=0.4.0",
    "tqdm>=4.67.1",
    "joblib>=1.5.2",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Programming Language :: Python :: 3.10",
]
keywords = [
    "python",
    "crater",
    "data analysis",
    "planetary",
    "moon",
]

[project.urls]
"Bug Tracker" = "https://github.com/cjtu/craterpy/issues"
homepage = "https://github.com/cjtu/craterpy"
repository = "https://github.com/cjtu/craterpy"
documentation = "https://readthedocs.org/projects/craterpy/"

[dependency-groups]
dev = [
    "pytest<9.0.0,>=8.3.5",
    "jupyter<2.0.0,>=1.1.1",
    "pytest-cov<7.0.0,>=6.0.0",
    "ruff>=0.12.11",
    "pre-commit>=4.3.0",
]
docs = [
    "myst-nb>=1.3.0",
    "myst-parser<2.0.0,>=1.0.0",
    "sphinx<7.0.0,>=6.2.1",
    "sphinx-rtd-theme<3.0.0,>=2.0.0",
    "sphinx-autobuild<2025.0.0,>=2024.10.3",
    "jupyter-cache>=1.0.1",
]

[tool.ruff.lint]
extend-select = [
    "B",        # Bugbear rules (static bug finder)
    "C90",      # Mccabe complexity check
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "N",        # Naming conventions
    "Q",        # Quotes best practices
    "RET",      # Good return practices
    "S",        # Security issues
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TC",       # Enforce importing certain types in a TYPE_CHECKING block
    "NPY",      # Some numpy-specific things
]
ignore = [ "E501" ]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["I", "Q", "W"]

[tool.pytest.ini_options]
addopts = "--cov=craterpy --cov-branch --cov-report term-missing  -v --color=yes"
python_files = "tests.py test_*.py *_tests.py"
filterwarnings = [
    "ignore:.*shapely.*is deprecated:DeprecationWarning",
    "ignore::UserWarning",
    "ignore:::antimeridian", 
    "ignore:::rasterstats"
]

[tool.coverage.run]
branch = true
source = ["craterpy/craterpy"]
omit = ["craterpy/tests/*"]

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
]
ignore_errors = true

[build-system]
build-backend  = 'hatchling.build'
requires       = ['hatchling']
